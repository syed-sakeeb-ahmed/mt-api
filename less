   30  git push
   31  git push origin main
   32  git push origin main
   33  npm run dev
   34  git status
   35  git add .
   36  git commit -m "Turn MoviePage into components"
   37  git push
   38  git push origin main
   39  npm run dev
   40  git statsu
   41  git status
   42  git add .
   43  git commit -m "Add DetailScore.vue styles"
   44  git push origin main
   45  npm run dev
   46  npm run dev
   47  git status
   48  git add .
   49  git commit -m "Add cast card logic"
   50  git push
   51  git push origin main
   52  npm run dev
   53  git status
   54  git add .
   55  git commit -m "Add basic person page styling"
   56  git push origin main
   57  npm run dev
   58  nvm install 22
   59  npm -v
   60  node -v
   61  npm -v
   62  node -v
   63  npm create vue@latest
   64  ls
   65  cd movietracker
   66  ls
   67  ls
   68  open vscode
   69  code .
   70  npm install
   71  npm run dev
   72  curl --request GET      --url 'https://api.themoviedb.org/3/movie/343611'      --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzN2RlOTUwYWZmMzE4YmM4OTg2ZDAwY2Q0OTFiZDY0NiIsIm5iZiI6MTc0NDYzNjk0MS45MTEsInN1YiI6IjY3ZmQwYzBkN2MyOWFlNWJjM2Q5NGI5NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.mCTxLG5QG2Eru7hmVZZq8g9_gF0CPd02Ffe1keac8yQ'
   73  curl --request GET      --url 'https://api.themoviedb.org/3/search/movie?query=Jack+Reacher'      --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzN2RlOTUwYWZmMzE4YmM4OTg2ZDAwY2Q0OTFiZDY0NiIsIm5iZiI6MTc0NDYzNjk0MS45MTEsInN1YiI6IjY3ZmQwYzBkN2MyOWFlNWJjM2Q5NGI5NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.mCTxLG5QG2Eru7hmVZZq8g9_gF0CPd02Ffe1keac8yQ'
   74  curl --request GET      --url 'https://api.themoviedb.org/3/discover/movie?language=en-US&include_video=false&include_adult=false&page=1&sort_by=popularity.desc'      --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzN2RlOTUwYWZmMzE4YmM4OTg2ZDAwY2Q0OTFiZDY0NiIsIm5iZiI6MTc0NDYzNjk0MS45MTEsInN1YiI6IjY3ZmQwYzBkN2MyOWFlNWJjM2Q5NGI5NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.mCTxLG5QG2Eru7hmVZZq8g9_gF0CPd02Ffe1keac8yQ'      --header 'accept: application/json'
   75  cd
   76  curl --request GET      --url 'https://api.themoviedb.org/3/discover/movie?language=en-US&include_video=false&include_adult=false&page=1&sort_by=popularity.desc'      --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzN2RlOTUwYWZmMzE4YmM4OTg2ZDAwY2Q0OTFiZDY0NiIsIm5iZiI6MTc0NDYzNjk0MS45MTEsInN1YiI6IjY3ZmQwYzBkN2MyOWFlNWJjM2Q5NGI5NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.mCTxLG5QG2Eru7hmVZZq8g9_gF0CPd02Ffe1keac8yQ'      --header 'accept: application/json' > out_tmdb.txt
   77  vim out_tmdb.txt 
   78  curl --request GET      --url 'https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc'      --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzN2RlOTUwYWZmMzE4YmM4OTg2ZDAwY2Q0OTFiZDY0NiIsIm5iZiI6MTc0NDYzNjk0MS45MTEsInN1YiI6IjY3ZmQwYzBkN2MyOWFlNWJjM2Q5NGI5NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.mCTxLG5QG2Eru7hmVZZq8g9_gF0CPd02Ffe1keac8yQ'      --header 'accept: application/json' > unmodified_query_tmdb.txt
   79  vim unmodified_query_tmdb.txt 
   80  vim unmodified_query_tmdb.txt 
   81  vim out_tmdb.txt 
   82  npm run dev
   83  npm run dev
   84  npm run dev
   85  npm install -D vitest
   86  npm run test
   87  q
   88  npm run test
   89  npm run test
   90  npm run test
   91  npm run test
   92  npm run test
   93  npm run test
   94  vitest run --reporter verbose
   95  npm run test
   96  npm run test
   97  npm run dev
   98  npm run test
   99  npx vitest --silent=false
  100  npx vitest --silent=false
  101  npm run test
  102  npm run dev
  103  npm run dev
  104  npm run test
  105  npm run dev
  106  npm run test
  107  npm run dev
  108  npm run test
  109  npm run dev
  110  npm run test
  111  npm run test
  112  npm run dev
  113  npm run test
  114  npm run dev
  115  npm run test
  116  npm run dev
  117  git status
  118  git add .
  119  git commit -m "Add genre options functionality"
  120  git push
  121  git push origin main
  122  npm run dev
  123  git add .
  124  git commit -m "Remove Suspense"
  125  git push
  126  git push origin main
  127  npm run test
  128  npm run dev
  129  npm run dev
  130  npm run test
  131  npm run dev
  132  npm run test
  133  npm run dev
  134  npm run test
  135  npm run dev
  136  npm run test
  137  npm run dev
  138  git status
  139  git add .
  140  git commit -m "Improve ASGenre component"
  141  git push
  142  git push origin main
  143  npm run dev
  144  git status
  145  npm run dev
  146  npm install primevue @primeuix/themes
  147  npm run dev
  148  npm run test
  149  git status
  150  git add .
  151  git commit -m "Finish Advanced Search Logic"
  152  git push
  153  git push origin main
  154  npm run dev
  155  npm run test
  156  npm run dev
  157  npm run test
  158  npm run dev
  159  git status
  160  git add .
  161  git commit -m "Genre componenet now reads from query"
  162  git push origin main
  163  npm run test
  164  npm run dev
  165  npm run test
  166  git add .
  167  git commit -m "Cast Componenet now reads from query url"
  168  git push
  169  git push origin main
  170  npm run test
  171  npm run dev
  172  git status
  173  git add .
  174  git commit-m "Genre component now reads from url query"
  175  git commit -m "Genre component now reads from url query"
  176  git push origin main
  177  npm run dev
  178  pwd
  179  mvn clean package
  180  mvn
  181  brew install mvn
  182  mvn clean package
  183  ./mvnw package && java -jar target/gs-spring-boot-docker-0.1.0.jar
  184  docker build -t sysmed/sb-5525 .
  185  docker run --name f1 -d -p 8080:8080 sysmed/sb-5525 --rm
  186  docker run --name s1 -d -p 8080:8080 sysmed/sb-5525 --rm
  187  java -jar ./target/world-0.0.1-SNAPSHOT.jar
  188  docker logs s1
  189  docker run --name s2 -d -p 8080:8080 sysmed/sb-5525 --rm
  190  docker container ls
  191  docker image prune -a
  192  docker build -t sysmed/sb-5525 .
  193  docker run --name s3 -d -p 8080:8080 sysmed/sb-5525 --rm
  194  docker container ls
  195  docker log s3
  196  docker logs s3
  197  docker stop s3
  198  docker containers
  199  docker container ls
  200  docker container ls -a
  201  docker push sysmed/sb-5525
  202  docker image prune 
  203  docker image ls
  204  docker container ls
  205  docker container ls -a
  206  docker container prune -a
  207  docker container prune
  208  docker image prune -a
  209  docker images ls 
  210  docker image ls 
  211  docker image ls -a
  212  docker build -t --platform linux/amd64,linux/arm64 sysmed/sb-5525 .
  213  docker buildx build -t --platform linux/amd64,linux/arm64 sysmed/sb-5525 .
  214  docker buildx build --platform linux/amd64,linux/arm64 -t sysmed/sb-5525 .
  215  docker buildx ls
  216  docker buildx build --platform linux/amd64,linux/arm64 -t sysmed/sb-5525 .
  217  ls
  218  mkdir docker_image
  219  cd docker_image/
  220  ls
  221  docker
  222  brew
  223  brew install docker
  224  docker
  225  docker build --help
  226  vim Dockerfile
  227  ls
  228  docker images
  229  brew uninstall docker
  230  docker
  231  docker
  232  brew install --cask docker 
  233  docker
  234  brew install docker
  235  docker
  236  docker images
  237  docker images
  238  ls
  239  vim Docker
  240  vim Dockerfile 
  241  docker build -t hello_world .
  242  docker images
  243  ls
  244  ls
  245  ls
  246  vim Docker
  247  vim Dockerfile 
  248  ls
  249  docker images
  250  ls
  251  docker images
  252  docker run hello_world
  253  docker images
  254  docker ps 
  255  docker ps -a
  256  docker run --help
  257  docker compose --help
  258  docker compose
  259  docker compose up --help
  260  ls
  261  vim Dockerfile 
  262  ls
  263  docker build -t frontend
  264  less history
  265  less | history
  266  history | less
  267  docker build -t frontend .
  268  ls
  269  docker images
  270  vim Dockerfile 
  271  docker build -t frontend-mt .
  272  docker images
  273  docker run --help 
  274  docker run --help | less
  275  docker run --name test-frontend -d -p 8080:80 frontend-mt
  276  docker ps
  277  docker ps -a 
  278  ls
  279  vim nginx.conf
  280  vim Dockerfile
  281  docker stop test-frontend
  282  docker ps
  283  docker ps -a
  284  docker container prune 
  285  docker ps -a
  286  docker images
  287  docker image prune -a
  288  docker images
  289  docker images -a
  290  docker container ls
  291  docker container ls -a
  292  docker images ls -a
  293  docker image ls -a
  294  docker build -t frontend-mt .
  295  docker images
  296  docker run --name test-frontend -d -p 8080:80 frontend-mt
  297  docker ps
  298  ls
  299  vim nginx.conf 
  300  code nginx.conf 
  301  docker stop test-frontend
  302  docker image prune -a
  303  docker image
  304  docker image
  305  docker image ls
  306  docker container ls
  307  docker container ls -a
  308  docker container prune -a
  309  docker container prune
  310  docker image prune
  311  docker image prune -a
  312  docker build -t frontend-mt .
  313  docker run --name test-frontend -d -p 8080:80 frontend
  314  docker container ls
  315  code .
  316  docker run --hel p
  317  docker run --help
  318  docker run --help | less
  319  docker run --rm --entrypoint=cat nginx /etc/nginx/nginx.conf > /host/path/nginx.conf
  320  docker run --rm --entrypoint=cat nginx /etc/nginx/nginx.conf > ./gamer.txt
  321  ls'
  322  q
  323  ls
  324  sudo chmod 400 ~/Downloads/my_key.pem 
  325  ssh -i ~/Downloads/my_key.pem ubuntu@54.88.185.184
  326  docker tag
  327  ls
  328  javac -version
  329  java -version
  330  docker
  331  docker exec -it jenkins-blueocean bash
  332  docker logs jenkins-blueocean
  333  docker buildx build --platform linux/amd64,linux/arm64 -t sysmed/sb-5525 .
  334  docker images
  335  docker buildx build --platform linux/amd64,linux/arm64 -t sysmed/sb-5525 .
  336  docker images
  337  docker images prune -a
  338  docker image prune -a
  339  docker image ls
  340  docker buildx build --platform linux/amd64 -t sysmed/sb-5525 .
  341  docker image
  342  docker image ls
  343  docker push 
  344  docker push sysmed/sb-5525
  345  docker build -t sb-arm .
  346  code ~/docker_image/
  347  mvn clean package
  348  docker buildx build --platform linux/amd64 -t sysmed/sb-5525 .
  349  docker image ls
  350  docker push sysmed/sb-5525
  351  docker buildx build --platform linux/amd64 -t sysmed/sb-5525 .
  352  docker push sysmed/sb-5525
  353  mvn clean package
  354  docker buildx build --platform linux/amd64 -t sysmed/sb-5525 .
  355  docker push sysmed/sb-5525
  356  mvn clean package
  357  docker buildx build --platform linux/amd64 -t sysmed/sb-5525 .
  358  docker push sysmed/sb-5525
  359  mvn clean package
  360  docker buildx build --platform linux/amd64 -t sysmed/sb-5525 .
  361  docker push sysmed/sb-5525
  362  mvn clean package
  363  docker buildx build --platform linux/amd64 -t sysmed/sb-5525 .
  364  docker push sysmed/sb-5525
  365  mvn clean package
  366  docker buildx build --platform linux/amd64 -t sysmed/sb-5525 .
  367  docker push sysmed/sb-5525
  368  mvn clean package
  369  mvn clean package
  370  docker buildx build --platform linux/amd64 -t sysmed/sb-5525 .
  371  docker push sysmed/sb-5525
  372  ls
  373  git init
  374  git add README.md
  375  git commit -m "first commit"
  376  git branch -M main
  377  git remote add origin git@github.com:syed-sakeeb-ahmed/mt-api.git
  378  git status
  379  git add .
  380  git status
  381  git commit -m "first commit"
  382  git status
  383  git push origin main
  384  vim backend-update
  385  java -jar world.jar 
  386  ls
  387  chmod 400 ~/Downloads/second-server-key.pem 
  388  history | less
  389  man ssh
  390  ssh -i ~/Downloads/second-server-key.pem ubuntu@52.87.206.155
  391  ssh -i ~/Downloads/second-server-key.pem ubuntu@52.87.206.155
  392  ssh -i ~/Downloads/second-server-key.pem ubuntu@52.87.206.155
  393  ssh -i ~/Downloads/second-server-key.pem ubuntu@3.94.114.58
  394  ssh -i ~/Downloads/second-server-key.pem ubuntu@3.94.114.58
  395  ip addr
  396  ifconfig
  397  ls
  398  ssh -i ~/Downloads/my_key.pem 
  399  ssh -i ~/Downloads/my_key.pem ubuntu@54.227.69.220
  400  ls
  401  ls
  402  cd
  403  cd docker_image/
  404  ls
  405  docker buildx build --platform linux/amd64 -t sysmed/mt-5525 .
  406  docker image ls
  407  docker push sysmed/mt-5525
  408  docker exec --help
  409  docker network create jenkins
  410  docker image pull docker:dind
  411  docker run --name jenkins-docker --rm --detach   --privileged --network jenkins --network-alias docker   --env DOCKER_TLS_CERTDIR=/certs   --volume jenkins-docker-certs:/certs/client   --volume jenkins-data:/var/jenkins_home   --publish 2376:2376   docker:dind --storage-driver overlay2
  412  docker container ls
  413  cd ..
  414  mkdir docker_jenkins
  415  cd docker_jenkins/
  416  ls
  417  vim Dockerfile
  418  docker build -t myjenkins-blueocean:2.504.1-1 .
  419  docker run --name jenkins-blueocean --restart=on-failure --detach   --network jenkins --env DOCKER_HOST=tcp://docker:2376   --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1   --publish 8080:8080 --publish 50000:50000   --volume jenkins-data:/var/jenkins_home   --volume jenkins-docker-certs:/certs/client:ro \
  420  docker run --name jenkins-blueocean --restart=on-failure --detach         --network jenkins --env DOCKER_HOST=tcp://docker:2376         --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1         --publish 8001:8080 --publish 50000:50000         --volume jenkins-data:/var/jenkins_home         --volume jenkins-docker-certs:/certs/client:ro myjenkins-blueocean:2.504.1-1
  421  docker exec --help
  422  touch password.txt
  423  vim password.txt 
  424  docker container ls
  425  docker logs myjenkins-blueocean:2.504.1-1
  426  docker logs myjenkins-blueocean
  427  docker logs jenkins-blueocean
  428  vim jenkins_token.txt
  429  ls
  430  alias jcli="java -jar jenkins-cli.jar -s http://localhost:8001/"
  431  jcli help
  432  jcli build
  433  ls
  434  vim auth.txt
  435  jcli -auth auth.txt 
  436  jcli who-am-i
  437  jcli -auth auth.txt who-am-i
  438  jcli help
  439  jcli -bearer @auth.txt who-am-i
  440  vim auth.txt 
  441  jcli -bearer auth.txt who-am-i
  442  vim auth.txt 
  443  jcli -bearer auth.txt who-am-i
  444  jcli bearer help
  445  jcli -bearer 113c622f248909fbcf5967b14e080aa102 who-am-i
  446  jcli -auth Syed:113c622f248909fbcf5967b14e080aa102 who-am-i
  447  java -jar jenkins-cli.jar who-am-i
  448  jcli -auth Syed:113c622f248909fbcf5967b14e080aa102 who-am-i
  449  jcli -auth admin:113c622f248909fbcf5967b14e080aa102 who-am-i
  450  jcli -auth syed:113c622f248909fbcf5967b14e080aa102 who-am-i
  451  jcli -auth sysmed:113c622f248909fbcf5967b14e080aa102 who-am-i
  452  jcli who-am-i
  453  vim auth.txt 
  454  jcli auth.txt who-am-i
  455  jcli -auth auth.txt who-am-i
  456  jcli -auth @auth.txt who-am-i
  457  jcli -auth @auth.txt who-am-i
  458  jcli -auth @auth.txt build hello-world
  459  jcli -auth @auth.txt build hello-world
  460  ls
  461  ls
  462  cp ~/Downloads/my_key.pem .
  463  ls
  464  docker container ls
  465  touch test.txt
  466  docker cp test.txt jenkins-blueocean:/var/jenkins_home/workspace/hello-pipeline
  467  docker cp my_key.pem jenkins-blueocean:/var/jenkins_home/workspace/hello-pipeline
  468  chmod 777 ~/Downloads/my_key.pem 
  469  cp ~/Downloads/my_key.pem .
  470  rm my_key.pem 
  471  cp ~/Downloads/my_key.pem .
  472  docker cp my_key.pem jenkins-blueocean:/var/jenkins_home/workspace/hello-pipeline
  473  chmod 400 ~/Downloads/my_key.pem 
  474  ls -l
  475  ls
  476  rm my_key.pem 
  477  ls
  478  ls
  479  docker push --help
  480  ls
  481  exit
  482  docker push sysmed/sb-5525
  483  docker push sysmed/sb-5525 > output.txt
  484  tail -n 1 $(docker push sysmed/sb-5525) > output.txt
  485  docker push sysmed/sb-5525 > output.txt
  486  tail -n 1 output.txt 
  487  git status
  488  vim .gitignore
  489  git status
  490  git status
  491  git add .
  492  git commit -m "Second commit"
  493  git push
  494  git push origin main
  495  mvn
  496  mvn dependency:resolve
  497  mvn compile
  498  mvn compile
  499  mvn compile
  500  git add .
  501  git status
  502  vim .gitignore 
  503  git status
  504  git add .
  505  git status
  506  vim .gitignore
  507  git reset
  508  git status
  509  git add .
  510  git status
  511  vim .gitignore
  512  git status
  513  ls
  514  vim .gitignore 
  515  git status
  516  git reset
  517  git add .
  518  git status
  519  git reset
  520  git rm --cached src/main/resources/application.properties
  521  git status
  522  git add .
  523  git status
  524  git commit -m "Non working mySQL"
  525  git push origin main
  526  vim .gitignore
  527  mvn compile
  528  mvn compile
  529  history > less
